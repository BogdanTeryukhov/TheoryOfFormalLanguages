(set-logic QF_NIA)
(declare-fun t1 () Int)
(declare-fun t0 () Int)
(declare-fun j1 () Int)
(declare-fun j0 () Int)
(declare-fun i1 () Int)
(declare-fun i0 () Int)
(declare-fun g2 () Int)
(declare-fun g1 () Int)
(declare-fun g0 () Int)
(declare-fun f2 () Int)
(declare-fun f1 () Int)
(declare-fun f0 () Int)
(assert (>= i1 f2))
(assert (>= i1 i1))
(assert (>= (* i1 j1 t1 ) (* f2 g2 )))
(assert (>= (+ (* i1 j1 t0 ) (* i1 j0 ) i0) (+ (* f2 g0 ) f0) ))
(assert (or (> (* i1 j1 t1 ) (* f2 g2 )) (> (+ (* i1 j1 t0 ) (* i1 j0 ) i0) (+ (* f2 g0 ) f0) )))
(assert (and (>= t1 1)(>= t0 0)(>= j1 1)(>= j0 0)(>= i1 1)(>= i0 0)(>= g2 1)(>= g1 1)(>= g0 0)(>= f2 1)(>= f1 1)(>= f0 0)))
(assert (and (or (>= t1 1)(>= t0 0)) (or (>= j1 1)(>= j0 0)(>= i1 1)(>= i0 0)(>= g2 1)(>= g1 1)(>= g0 0)(>= f2 1)(>= f1 1)(>= f0 0))))
(check-sat)
(get-model)
